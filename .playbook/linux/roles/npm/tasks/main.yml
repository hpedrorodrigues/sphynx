- name: Detecting - Node Version Manager is available
  stat:
    path: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
  register: nvm

- name: Detecting - Node Package Manager is available
  stat:
    path: "{{ npm_bin }}"
  register: npm

- name: Installing NVM
  shell: >
    curl -o- https://raw.githubusercontent.com/creationix/nvm/{{ nvm_version }}/install.sh | bash
  args:
    creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
  register: new_nvm
  when:
    - not nvm.stat.exists

- name: Installing NPM
  shell: |
    source "{{ ansible_env.HOME }}/.nvm/nvm.sh"
    nvm install node
    nvm alias default node

    nvm install "{{ npm_version }}"
    nvm use "{{ npm_version }}"
    nvm alias default "{{ npm_version }}"
  register: new_npm
  args:
    executable: /usr/bin/bash
  when:
    - nvm.stat.exists or new_nvm.rc == 0

- name: Updating NPM
  npm:
    name: npm
    state: present
    global: yes
    executable: "{{ npm_bin }}"
  environment:
    PATH: "{{ npm_dir }}:{{ ansible_env.PATH }}"
  when:
    - npm.stat.exists or new_npm.rc == 0
    - nvm.stat.exists or new_nvm.rc == 0

- name: Getting all installed NPM packages
  command: "{{ npm_bin }} list -g --depth=0"
  register: installed_packages
  check_mode: no
  changed_when: false
  environment:
    PATH: "{{ npm_dir }}:{{ ansible_env.PATH }}"
  when: npm.stat.exists or new_npm.rc == 0

- name: Installing NPM packages
  npm:
    name: "{{ item }}"
    state: present
    global: yes
    executable: "{{ npm_bin }}"
  environment:
    PATH: "{{ npm_dir }}:{{ ansible_env.PATH }}"
  with_items: "{{ npm_packages }}"
  when:
    - npm.stat.exists or new_npm.rc == 0
    - npm_packages | count > 0
    - item not in installed_packages.stdout
