#!/usr/bin/env bash

# Make vim the default editor
export VISUAL='vim'
export EDITOR="${VISUAL}"

# Make less the default pager
export LESS='-iRFXMx4'
export PAGER='less'
export MANPAGER="${PAGER}"

# Setting language environment
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

### Loading personal scripts

export DOTFILES_DIR="${HOME}/.sphynx"
export DOTFILES=(
  # Common
  "${DOTFILES_DIR}/aliases.sh"
  "${DOTFILES_DIR}/os_aliases.sh"
  "${DOTFILES_DIR}/alien.sh"
  "${DOTFILES_DIR}/aws.sh"
  "${DOTFILES_DIR}/common.sh"
  "${DOTFILES_DIR}/filesystem.sh"
  "${DOTFILES_DIR}/git.sh"
  "${DOTFILES_DIR}/kubernetes.sh"
  "${DOTFILES_DIR}/learning.sh"
  "${DOTFILES_DIR}/network.sh"
  "${DOTFILES_DIR}/management.sh"

  # Secrets
  "${DOTFILES_DIR}/secrets.sh"

  # Jetbridge
  "${HOME}/.jetbridgerc"
)

# shellcheck disable=SC2048  # Use "$@" (with quotes) to prevent whitespace problems
for dotfile in ${DOTFILES[*]}; do
  if [ -s "${dotfile}" ]; then
    source "${dotfile}"
  else
    echo "!!! No such file \"${dotfile}\". Ignoring it." >&2
  fi
done

unset DOTFILES_DIR
unset DOTFILES

#|> NVM
# https://github.com/nvm-sh/nvm/issues/2724
# Lazy loading nvm
export NVM_DIR="${HOME}/.nvm"

if [ -d "${NVM_DIR}" ]; then
  function nvm() {
    unset -f nvm

    nvm_installation_dir='/usr/local/opt/nvm'
    nvm_files=(
      "${NVM_DIR}/nvm.sh"
      "${NVM_DIR}/bash_completion"
      "${nvm_installation_dir}/nvm.sh"
      "${nvm_installation_dir}/etc/bash_completion.d/nvm"
    )

    for nvm_file in "${nvm_files[@]}"; do
      if [ -s "${nvm_file}" ]; then
        source "${nvm_file}"
      fi
    done

    unset nvm_installation_dir
    unset nvm_files

    # shellcheck disable=SC2068  # Double quote array expansions
    nvm ${@}
  }
fi

#|> Krew
export KREW_BIN="${HOME}/.krew/bin"

if [ -d "${KREW_BIN}" ] && [[ "${PATH}" != *"${KREW_BIN}"* ]]; then
  export PATH="${PATH}:${KREW_BIN}"
fi

#|> Go
export GOPATH="${HOME}/.go"
export GO_WORKSPACE="${GOPATH}/src"

if [ -d "${GOPATH}/bin" ] && [[ "${PATH}" != *"${GOPATH}/bin"* ]]; then
  export PATH="${PATH}:${GOPATH}/bin"
fi

#|> pyenv
# https://github.com/pyenv/pyenv/issues/784#issuecomment-826444110
# Lazy loading pyenv (based on https://github.com/davidparsson/zsh-pyenv-lazy/tree/master)
if hash pyenv 2>/dev/null; then
  function pyenv() {
    unset -f pyenv
    eval "$(pyenv init --path --no-rehash)"
    # shellcheck disable=SC2068  # Double quote array expansions
    pyenv ${@}
  }
fi

#|> Non-public scripts
export SECRETS_BIN="${HOME}/Code/Personal/secrets/bin"

if [ -d "${SECRETS_BIN}" ] && [[ "${PATH}" != *"${SECRETS_BIN}"* ]]; then
  export PATH="${PATH}:${SECRETS_BIN}"
fi

#|> AWS CLI
export AWS_PROFILE='sphynx'

#|> Homebrew/Linuxbrew
# https://docs.brew.sh/Analytics
export HOMEBREW_NO_ANALYTICS='1'

#|> Bat
export BAT_THEME='Dracula'
export BAT_STYLE='plain'

#|> Sphynx
export SX_CONFIRMATION_REQUIRED='false'
