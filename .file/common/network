#!/usr/bin/env bash

function public_ip() {
  # shellcheck disable=SC2068  # Double quote array expansions
  sx ip public ${@}
}

function private_ip() {
  # shellcheck disable=SC2068  # Double quote array expansions
  sx ip private ${@}
}

function dns() {
  sx system dns --query "${*}"
}

function certsans() {
  local -r func_name="${FUNCNAME[0]:-${funcstack[1]}}"
  local -r domain="${1}"

  if [ -z "${domain}" ]; then
    echo '!!! This function needs a domain as first argument' >&2
    echo "!!! i.e ${func_name} google.com" >&2
    return 1
  fi

  echo -e "Testing ${domain}â€¦\n"

  local -r info="$(echo -e 'GET / HTTP/1.0\nEOT' \
    | openssl s_client -connect "${domain}:443" -servername "${domain}" 2>&1)"

  if ! [[ ${info} == *"-----BEGIN CERTIFICATE-----"* ]]; then
    echo 'No certificate found' >&2
    return 1
  fi

  local -r certificate_options="no_aux, no_header, no_issuer, \
                                no_pubkey, no_serial, no_sigdump, \
                                no_signame, no_validity, no_version"
  local -r text=$(
    echo "${info}" | openssl x509 -text -certopt "${certificate_options}"
  )

  echo -e 'Common Name:\n'
  echo "${text}" \
    | grep 'Subject:' \
    | sed -e 's/^.*CN=//' \
    | sed -e 's/\/emailAddress=.*//'

  echo -e '\nSubject Alternative Name(s):\n'
  echo "${text}" \
    | grep -A 1 'Subject Alternative Name:' \
    | sed -e '2s/DNS://g' -e 's/ //g' \
    | tr ',' '\n' \
    | tail -n +2
}

function shinatra() {
  local -r func_name="${FUNCNAME[0]:-${funcstack[1]}}"
  local -r port="${1}"
  local -r response_body="${2}"

  if [ -z "${port}" ] || [ -z "${response_body}" ]; then
    echo '!!! This function needs a port and a response body as arguments' >&2
    echo "!!! i.e ${func_name} 8080 OK" >&2
    return 1
  fi

  curl 'https://raw.githubusercontent.com/benrady/shinatra/master/shinatra.sh' \
    | bash -s -- "${1}" "${2}"
}

function akamai() {
  curl \
    -I \
    -H 'Pragma: akamai-x-cache-on, akamai-x-cache-remote-on, akamai-x-check-cacheable, akamai-x-get-cache-key, akamai-x-get-extracted-values, akamai-x-get-nonces, akamai-x-get-ssl-client-session-id, akamai-x-get-true-cache-key, akamai-x-serial-no' \
    "${@}"
}
